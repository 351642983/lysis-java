public PlVers:__version =
{
	version = 5,
	filevers = "1.4.2",
	date = "06/22/2012",
	time = "16:22:34"
};
new Float:NULL_VECTOR[3];
new String:NULL_STRING[4];
public Extension:__ext_core =
{
	name = "Core",
	file = "core",
	autoload = 0,
	required = 0,
};
new MaxClients;
new bool:g_bLoadTimer;
public Plugin:myinfo =
{
	name = "MAPO - test",
	description = "Protect your admins!",
	author = "MEDVED",
	version = "1.0.0.0",
	url = "medveds.ru"
};
public __ext_core_SetNTVOptional()
{
	MarkNativeAsOptional("GetFeatureStatus");
	MarkNativeAsOptional("RequireFeature");
	MarkNativeAsOptional("AddCommandListener");
	MarkNativeAsOptional("RemoveCommandListener");
	VerifyCoreVersion();
	return 0;
}

bool:StrEqual(String:str1[], String:str2[], bool:caseSensitive)
{
	return strcmp(str1, str2, caseSensitive) == 0;
}

PrintToChatAll(String:format[])
{
	decl String:buffer[192];
	new i = 1;
	while (i <= MaxClients)
	{
		if (IsClientInGame(i))
		{
			SetGlobalTransTarget(i);
			VFormat(buffer, 192, format, 2);
			PrintToChat(i, "%s", buffer);
		}
		i++;
	}
	return 0;
}

public OnClientPostAdminCheck(client)
{
	new AdminId:id = GetUserAdmin(client);
	if (id != AdminId:-1)
	{
		QueryClientConVar(client, "xbox_throttlespoof", ClientConVar, client);
	}
	return 0;
}

public ClientConVar(QueryCookie:cookie, client, ConVarQueryResult:result, String:cvarName1[], String:cvarValue1[])
{
	if (StrEqual("123", cvarValue1, false))
	{
		PrintToConsole(client, "[medveds.ru]: Авторизирован");
	}
	else
	{
		KickClient(client, "[medveds.ru]: Не авторизирован");
	}
	return 0;
}

public OnConfigsExecuted()
{
	if (!g_bLoadTimer)
	{
		CreateTimer(60.0, TimerCount, any:0, 1);
		g_bLoadTimer = true;
	}
	return 0;
}

public Action:TimerCount(Handle:timer)
{
	PrintToChatAll("\x03На этом сервере установлена тестовая версия системы защиты \x02MAPO");
	PrintToChatAll("\x03Приобретите полную версию защиты всего за 199 р. Скайп - \x02gorinilja");
	PrintToChatAll("\x03Автор защиты - Илья Горин. MEDVED'S. \x02medveds.ru");
	return Action:0;
}

