new g_iBulletsDropped[33][15];
new g_iMaxPlayers;
new g_iConnected;
new g_iAlive;
new g_iMsgId_AmmoPickup;
new g_iMsgId_WeapPickup;
new g_iCvar_AimDrop;
new g_iCvar_GrenadeDrop;
new g_iCvar_DeathDrop;
new g_iCvar_DisconnectDrop;
new g_iCvar_ModelAngleFix;
new g_bInAutoDrop;
new HamHook:g_iHamHook_Think;
new g_iHamHook_Active;
new g_iDeathDrops[33][29];
new g_iDeathDropsNum[33];
new Float:g_fPlayerAngle[33];
new bool:g_bVipDrop;
new bool:g_bChangingMap;
new g_iAmmoNames[15][0] =
{
	{
		0, ...
	},
	{
		51, ...
	},
	{
		55, ...
	},
	{
		53, ...
	},
	{
		53, ...
	},
	{
		98, ...
	},
	{
		52, ...
	},
	{
		53, ...
	},
	{
		53, ...
	},
	{
		51, ...
	},
	{
		57, ...
	},
	{
		70, ...
	},
	{
		72, ...
	},
	{
		83, ...
	},
	{
		67, ...
	}
};
new g_iAmmoEntityNames[15][0] =
{
	{
		0, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		97, ...
	},
	{
		119, ...
	},
	{
		119, ...
	},
	{
		119, ...
	},
	{
		119, ...
	}
};
new g_iMaxAmmo[15] =
{
	0, 30, 90, 200, 90, 32, 100, 100, 35, 52, 120, 2, 1, 1, 1
};
bool:operator<=(Float:,Float:)(Float:oper1, Float:oper2)
{
	return 0 >= floatcmp(oper1, oper2);
}

public __fatal_ham_error(Ham:id, HamError:err, reason[])
{
	new func = get_func_id("HamFilter", -1);
	new bool:fail = 1;
	new var1;
	if (func != -1 && callfunc_begin_i(func, -1) == 1)
	{
		callfunc_push_int(id);
		callfunc_push_int(err);
		callfunc_push_str(reason, "HamFilter");
		if (callfunc_end() == 1)
		{
			fail = false;
		}
	}
	if (fail)
	{
		set_fail_state(reason);
	}
	return 0;
}

public plugin_init()
{
	register_plugin(7804, "2.3", "Numb");
	register_event("30", "Event_MapChangeScoreboard", 8024, 8032);
	register_forward(99, "FM_ClientDisconnect_Pre", "HamFilter");
	register_forward("", "FM_SetModel_Pre", "HamFilter");
	RegisterHam("HamFilter", "player", "Ham_Spawn_Player_Post", 1);
	RegisterHam(11, "player", "Ham_Killed_player_Pre", "HamFilter");
	RegisterHam(11, "player", "Ham_Killed_player_Post", 1);
	RegisterHam(99, "weapon_hegrenade", "Ham_Item_CanDrop_Pre", "HamFilter");
	RegisterHam(99, "weapon_flashbang", "Ham_Item_CanDrop_Pre", "HamFilter");
	RegisterHam(99, "weapon_smokegrenade", "Ham_Item_CanDrop_Pre", "HamFilter");
	RegisterHam(99, "weapon_knife", "Ham_Item_CanDrop_Pre", "HamFilter");
	RegisterHam(42, "weaponbox", "Ham_Touch_wpnbox_Pre", "HamFilter");
	RegisterHam(42, "func_vip_safetyzone", "Ham_Touch_safezone_Pre", "HamFilter");
	g_iHamHook_Think = RegisterHam(41, "player", "Ham_Think_player_Pre", "HamFilter");
	DisableHamForward(g_iHamHook_Think);
	g_iCvar_AimDrop = register_cvar("rwd_aimdrop", 9608, "HamFilter", "HamFilter");
	g_iCvar_GrenadeDrop = register_cvar("rwd_grenadedrop", 9680, "HamFilter", "HamFilter");
	g_iCvar_DeathDrop = register_cvar("rwd_deathdrop", 9744, "HamFilter", "HamFilter");
	g_iCvar_DisconnectDrop = register_cvar("rwd_disconnectdrop", 9828, "HamFilter", "HamFilter");
	g_iCvar_ModelAngleFix = register_cvar("rwd_modelanglefix", 9908, "HamFilter", "HamFilter");
	g_iMaxPlayers = clamp(get_maxplayers(), 1, 32);
	g_iMsgId_AmmoPickup = get_user_msgid("AmmoPickup");
	g_iMsgId_WeapPickup = get_user_msgid("WeapPickup");
	return 0;
}

public plugin_precache()
{
	precache_model("models/w_357ammobox.mdl");
	precache_sound("items/9mmclip2.wav");
	return 0;
}

public plugin_unpause()
{
	g_iConnected = 0;
	g_iAlive = 0;
	new iPlrId = 1;
	while (iPlrId <= g_iMaxPlayers)
	{
		if (is_user_alive(iPlrId))
		{
			g_iConnected = 1 << iPlrId & 31 | g_iConnected;
			g_iAlive = 1 << iPlrId & 31 | g_iAlive;
		}
		else
		{
			if (is_user_connected(iPlrId))
			{
				g_iConnected = 1 << iPlrId & 31 | g_iConnected;
			}
		}
		iPlrId++;
	}
	return 0;
}

public client_connect(iPlrId)
{
	g_iAlive = ~1 << iPlrId & 31 & g_iAlive;
	g_iConnected = ~1 << iPlrId & 31 & g_iConnected;
	return 0;
}

public client_putinserver(iPlrId)
{
	g_iConnected = 1 << iPlrId & 31 | g_iConnected;
	return 0;
}

public Event_MapChangeScoreboard()
{
	g_bChangingMap = true;
	return 0;
}

public Message_AmmoPickup(iMsgId, iMsgType, iPlrId)
{
	static s_iAmmoNum;
	s_iAmmoNum = g_iBulletsDropped[iPlrId][get_msg_arg_int(1)];
	if (s_iAmmoNum)
	{
		set_msg_arg_int(2, 1, s_iAmmoNum);
	}
	return 0;
}

public Message_Block(iMsgId, iMsgType, iPlrId)
{
	return 1;
}

public FM_ClientDisconnect_Pre(iPlrId)
{
	g_iConnected = ~1 << iPlrId & 31 & g_iConnected;
	g_iAlive = ~1 << iPlrId & 31 & g_iAlive;
	g_iHamHook_Active = ~1 << iPlrId & 31 & g_iHamHook_Active;
	if (get_pcvar_num(g_iCvar_DisconnectDrop))
	{
		static s_iVip;
		s_iVip = get_pdata_int(iPlrId, 209, 5, 5);
		set_pdata_int(iPlrId, 209, s_iVip & -257, 5, 5);
		force_weapon_drop(iPlrId, 0, 0);
		set_pdata_int(iPlrId, 209, s_iVip, 5, 5);
	}
	return 0;
}

public FM_SetModel_Pre(iEnt, iModel[])
{
	if (!equal(iModel, "models/w_", 9))
	{
		return 1;
	}
	if (equal(iModel[9], "weaponbox.mdl", "HamFilter"))
	{
		return 1;
	}
	static s_iClassName[11];
	pev(iEnt, 1, s_iClassName, 10);
	if (equal(s_iClassName, "weaponbox", "HamFilter"))
	{
		static Float:s_fAngle[3];
		static s_bAlive;
		static Float:s_fVelocity[3];
		static s_iOwner;
		s_iOwner = pev(iEnt, 18);
		if (0 < s_iOwner <= g_iMaxPlayers)
		{
			new var1;
			if (1 << s_iOwner & 31 & g_iAlive)
			{
				var1 = 1;
			}
			else
			{
				var1 = 0;
			}
			s_bAlive = var1;
		}
		else
		{
			s_bAlive = 0;
		}
		new var2;
		if (s_bAlive && !g_bVipDrop)
		{
			if (get_pcvar_num(g_iCvar_AimDrop))
			{
				static Float:s_fResult[3];
				static Float:s_fOrigin[3];
				pev(s_iOwner, 118, s_fOrigin);
				pev(s_iOwner, 126, s_fAngle);
				SphereToCartesian(s_fResult, s_fOrigin, s_fAngle, 10420);
				pev(s_iOwner, 120, s_fVelocity);
				new var4 = s_fVelocity;
				var4[0] = floatadd(var4[0], floatsub(s_fResult[0], s_fOrigin[0]));
				new var5 = s_fVelocity[1];
				var5 = floatadd(var5, floatsub(s_fResult[1], s_fOrigin[1]));
				new var6 = s_fVelocity[2];
				var6 = floatsub(var6, floatsub(s_fResult[2], s_fOrigin[2]));
				set_pev(iEnt, 120, s_fVelocity);
			}
		}
		else
		{
			if (is_player_connected(s_iOwner))
			{
				if (get_pcvar_num(g_iCvar_DeathDrop))
				{
					new var3;
					if (1 << s_iOwner & 31 & g_iHamHook_Active && 0 <= g_iDeathDropsNum[s_iOwner] && g_iDeathDropsNum[s_iOwner] < 29)
					{
						g_iDeathDrops[s_iOwner][g_iDeathDropsNum[s_iOwner]] = iEnt;
						g_iDeathDropsNum[s_iOwner]++;
					}
					else
					{
						pev(s_iOwner, 120, s_fVelocity);
					}
					new var7 = s_fVelocity;
					var7[0] = floatadd(var7[0], random_float(-1054867456, 1092616192));
					new var8 = s_fVelocity[1];
					var8 = floatadd(var8, random_float(-1054867456, 1092616192));
					new var9 = s_fVelocity[2];
					var9 = floatadd(var9, random_float(-1063256064, 1084227584));
					set_pev(iEnt, 120, s_fVelocity);
				}
			}
			if (get_pcvar_num(g_iCvar_DisconnectDrop))
			{
				s_fVelocity[0] = random_float(-1054867456, 1092616192);
				s_fVelocity[1] = random_float(-1054867456, 1092616192);
				s_fVelocity[2] = random_float(-1063256064, 1084227584);
				set_pev(iEnt, 120, s_fVelocity);
			}
		}
		if (0 < s_iOwner <= g_iMaxPlayers)
		{
			if (!s_bAlive)
			{
				pev(iEnt, 124, s_fAngle);
				s_fAngle[1] = g_fPlayerAngle[s_iOwner];
				set_pev(iEnt, 124, s_fAngle);
			}
			if (equal(iModel[9], "flashbang.mdl", "HamFilter"))
			{
				set_pdata_int(iEnt, 52, engfunc(43, g_iAmmoNames[11]), 4, 5);
				if (s_bAlive)
				{
					set_pdata_int(iEnt, 84, 1, 4, 5);
					if (0 < g_iBulletsDropped[s_iOwner][11])
					{
						static s_iFwdMsg_WeapPickup;
						static s_iFwdMsg_AmmoPickup;
						s_iFwdMsg_AmmoPickup = register_message(g_iMsgId_AmmoPickup, "Message_Block");
						s_iFwdMsg_WeapPickup = register_message(g_iMsgId_WeapPickup, "Message_Block");
						ham_give_item(s_iOwner, "weapon_flashbang");
						set_pdata_int(s_iOwner, 387, g_iBulletsDropped[s_iOwner][11], 5, 5);
						engclient_cmd(s_iOwner, "weapon_flashbang", 10768, 10772);
						unregister_message(g_iMsgId_AmmoPickup, s_iFwdMsg_AmmoPickup);
						unregister_message(g_iMsgId_WeapPickup, s_iFwdMsg_WeapPickup);
					}
				}
				else
				{
					set_pdata_int(iEnt, 84, g_iBulletsDropped[s_iOwner][11], 4, 5);
				}
				message_begin(2, 23, 10776, "HamFilter");
				write_byte(99);
				write_short(iEnt);
				message_end();
			}
			if (equal(iModel[9], "hegrenade.mdl", "HamFilter"))
			{
				message_begin(2, 23, 10776, "HamFilter");
				write_byte(99);
				write_short(iEnt);
				message_end();
				pev(iEnt, 124, s_fAngle);
				new var10 = s_fAngle[1];
				var10 = floatadd(1119092736, var10);
				set_pev(iEnt, 124, s_fAngle);
			}
			if (equal(iModel[9], "smokegrenade.mdl", "HamFilter"))
			{
				message_begin(2, 23, 10776, "HamFilter");
				write_byte(99);
				write_short(iEnt);
				message_end();
				pev(iEnt, 124, s_fAngle);
				new var11 = s_fAngle[1];
				var11 = floatadd(1110704128, var11);
				set_pev(iEnt, 124, s_fAngle);
			}
			if (equal(iModel[9], "knife.mdl", "HamFilter"))
			{
				pev(iEnt, 124, s_fAngle);
				new var12 = s_fAngle[1];
				var12 = floatadd(1127481344, var12);
				set_pev(iEnt, 124, s_fAngle);
				static s_iLoop;
				s_iLoop = 1;
				while (s_iLoop < 11)
				{
					set_pdata_int(iEnt, s_iLoop + 41, engfunc(43, g_iAmmoNames[s_iLoop]), 4, 5);
					set_pdata_int(iEnt, s_iLoop + 73, g_iBulletsDropped[s_iOwner][s_iLoop], 4, 5);
					s_iLoop += 1;
				}
				engfunc(2, iEnt, "models/w_357ammobox.mdl");
				return 4;
			}
			if (get_pcvar_num(g_iCvar_ModelAngleFix))
			{
				pev(iEnt, 124, s_fAngle);
				if (equal(iModel[9], "glock18.mdl", "HamFilter"))
				{
					new var13 = s_fAngle[1];
					var13 = floatsub(var13, 1121714176);
				}
				else
				{
					if (equal(iModel[9], "usp.mdl", "HamFilter"))
					{
						new var14 = s_fAngle[1];
						var14 = floatsub(var14, 1115815936);
					}
					if (equal(iModel[9], "deagle.mdl", "HamFilter"))
					{
						new var15 = s_fAngle[1];
						var15 = floatsub(var15, 1121714176);
					}
					if (equal(iModel[9], "p228.mdl", "HamFilter"))
					{
						new var16 = s_fAngle[1];
						var16 = floatsub(var16, 1114636288);
					}
					if (equal(iModel[9], "elite.mdl", "HamFilter"))
					{
						new var17 = s_fAngle[1];
						var17 = floatsub(var17, 1127481344);
					}
					if (equal(iModel[9], "fiveseven.mdl", "HamFilter"))
					{
						new var18 = s_fAngle[1];
						var18 = floatsub(var18, 1112014848);
					}
					if (equal(iModel[9], "m3.mdl", "HamFilter"))
					{
						new var19 = s_fAngle[1];
						var19 = floatsub(var19, 1123680256);
					}
					if (equal(iModel[9], "xm1014.mdl", "HamFilter"))
					{
						new var20 = s_fAngle[1];
						var20 = floatsub(var20, 1084227584);
					}
					if (equal(iModel[9], "mp5.mdl", "HamFilter"))
					{
						new var21 = s_fAngle[1];
						var21 = floatadd(1092616192, var21);
					}
					if (equal(iModel[9], "tmp.mdl", "HamFilter"))
					{
						new var22 = s_fAngle[1];
						var22 = floatsub(var22, 1124532224);
					}
					if (equal(iModel[9], "p90.mdl", "HamFilter"))
					{
						new var23 = s_fAngle[1];
						var23 = floatsub(var23, 1123680256);
					}
					if (equal(iModel[9], "ump45.mdl", "HamFilter"))
					{
						new var24 = s_fAngle[1];
						var24 = floatsub(var24, 1116471296);
					}
					if (equal(iModel[9], "galil.mdl", "HamFilter"))
					{
						new var25 = s_fAngle[1];
						var25 = floatadd(1097859072, var25);
					}
					if (equal(iModel[9], "famas.mdl", "HamFilter"))
					{
						new var26 = s_fAngle[1];
						var26 = floatsub(var26, 1106247680);
					}
					if (equal(iModel[9], "ak47.mdl", "HamFilter"))
					{
						new var27 = s_fAngle[1];
						var27 = floatsub(var27, 1121058816);
					}
					if (equal(iModel[9], "m4a1.mdl", "HamFilter"))
					{
						new var28 = s_fAngle[1];
						var28 = floatsub(var28, 1114636288);
					}
					if (equal(iModel[9], "sg552.mdl", "HamFilter"))
					{
						new var29 = s_fAngle[1];
						var29 = floatsub(var29, 1124204544);
					}
					if (equal(iModel[9], "aug.mdl", "HamFilter"))
					{
						new var30 = s_fAngle[1];
						var30 = floatsub(var30, 1123680256);
					}
					if (equal(iModel[9], "scout.mdl", "HamFilter"))
					{
						new var31 = s_fAngle[1];
						var31 = floatsub(var31, 1116471296);
					}
					if (equal(iModel[9], "awp.mdl", "HamFilter"))
					{
						new var32 = s_fAngle[1];
						var32 = floatsub(var32, 1121714176);
					}
					if (equal(iModel[9], "g3sg1.mdl", "HamFilter"))
					{
						new var33 = s_fAngle[1];
						var33 = floatsub(var33, 1121714176);
					}
					if (equal(iModel[9], "sg550.mdl", "HamFilter"))
					{
						new var34 = s_fAngle[1];
						var34 = floatsub(var34, 1122369536);
					}
					if (equal(iModel[9], "m249.mdl", "HamFilter"))
					{
						new var35 = s_fAngle[1];
						var35 = floatsub(var35, 1119748096);
					}
				}
				set_pev(iEnt, 124, s_fAngle);
			}
		}
	}
	return 1;
}

public Ham_Spawn_Player_Post(iPlrId)
{
	if (is_user_alive(iPlrId))
	{
		g_iAlive = 1 << iPlrId & 31 | g_iAlive;
	}
	else
	{
		g_iAlive = ~1 << iPlrId & 31 & g_iAlive;
	}
	return 0;
}

public Ham_Killed_player_Pre(iPlrId, iAttackerId, iShouldGib)
{
	g_iDeathDropsNum[iPlrId] = 0;
	if (!g_iHamHook_Active)
	{
		EnableHamForward(g_iHamHook_Think);
	}
	g_iHamHook_Active = 1 << iPlrId & 31 | g_iHamHook_Active;
	if (get_pcvar_num(g_iCvar_DeathDrop))
	{
		static s_iWeaponType;
		static s_iArmedGrenade;
		s_iArmedGrenade = get_pdata_cbase(iPlrId, 373, 5, 5);
		new var1;
		if (s_iArmedGrenade > 0 && pev_valid(s_iArmedGrenade))
		{
			s_iWeaponType = get_pdata_int(s_iArmedGrenade, 43, 4, 5);
			new var2;
			if (s_iWeaponType == 25 || s_iWeaponType == 4 || s_iWeaponType == 9)
			{
				new var3;
				if (get_pdata_float(s_iArmedGrenade, 30, "", 5) && get_pdata_float(s_iArmedGrenade, 48, 4, 5) <= 0)
				{
					s_iArmedGrenade = s_iWeaponType;
				}
				else
				{
					s_iArmedGrenade = 0;
				}
			}
			else
			{
				s_iArmedGrenade = 0;
			}
		}
		else
		{
			s_iWeaponType = 0;
			s_iArmedGrenade = 0;
		}
		static s_iVip;
		s_iVip = get_pdata_int(iPlrId, 209, 5, 5);
		set_pdata_int(iPlrId, 209, s_iVip & -257, 5, 5);
		force_weapon_drop(iPlrId, s_iArmedGrenade, s_iWeaponType);
		set_pdata_int(iPlrId, 209, s_iVip, 5, 5);
	}
	return 0;
}

public Ham_Killed_player_Post(iPlrId, iAttackerId, iShouldGib)
{
	if (is_user_alive(iPlrId))
	{
		g_iAlive = 1 << iPlrId & 31 | g_iAlive;
	}
	else
	{
		g_iAlive = ~1 << iPlrId & 31 & g_iAlive;
	}
	return 0;
}

public Ham_Think_player_Pre(iPlrId)
{
	if (g_iDeathDropsNum[iPlrId])
	{
		static Float:s_fVelocity[3];
		pev(iPlrId, 120, s_fVelocity);
		static s_iEnt;
		static s_iDeathDrops;
		s_iDeathDrops = 0;
		while (g_iDeathDropsNum[iPlrId] > s_iDeathDrops)
		{
			s_iEnt = g_iDeathDrops[iPlrId][s_iDeathDrops];
			new var1;
			if (s_iEnt > 0 && pev_valid(s_iEnt))
			{
				set_pev(s_iEnt, 120, s_fVelocity);
			}
			s_iDeathDrops += 1;
		}
	}
	g_iHamHook_Active = ~1 << iPlrId & 31 & g_iHamHook_Active;
	if (!g_iHamHook_Active)
	{
		DisableHamForward(g_iHamHook_Think);
	}
	return 0;
}

public Ham_Touch_safezone_Pre(iEnt, iPlrId)
{
	new var1;
	if (iPlrId > 0 && iPlrId <= g_iMaxPlayers)
	{
		static s_iVip;
		s_iVip = get_pdata_int(iPlrId, 209, 5, 5);
		if (s_iVip & 256)
		{
			g_bVipDrop = true;
			set_pdata_int(iPlrId, 209, s_iVip & -257, 5, 5);
			force_weapon_drop(iPlrId, 0, 0);
			set_pdata_int(iPlrId, 209, s_iVip, 5, 5);
			g_bVipDrop = false;
		}
	}
	return 0;
}

public Ham_Item_CanDrop_Pre(iEnt)
{
	if (g_bInAutoDrop)
	{
		SetHamReturnInteger(1);
	}
	else
	{
		if (get_pcvar_num(g_iCvar_GrenadeDrop))
		{
			static s_iOwner;
			s_iOwner = get_pdata_cbase(iEnt, 41, 4, 5);
			if (0 < s_iOwner <= g_iMaxPlayers)
			{
				if (get_pdata_int(s_iOwner, 209, 5, 5) & 256)
				{
					return 1;
				}
				static s_iWeaponType;
				s_iWeaponType = get_pdata_int(iEnt, 43, 4, 5);
				if (s_iWeaponType == 29)
				{
					return 1;
				}
				if (s_iWeaponType == 25)
				{
					g_iBulletsDropped[s_iOwner][11] = clamp(get_pdata_int(s_iOwner, 387, 5, 5), 1, 2) - 1;
				}
				SetHamReturnInteger(1);
			}
			return 1;
		}
		return 1;
	}
	return 3;
}

public Ham_Touch_wpnbox_Pre(iEnt, iPlrId)
{
	if (0 < iPlrId <= g_iMaxPlayers)
	{
		new var1;
		if (get_pdata_int(iPlrId, 209, 5, 5) & 256 || ~pev(iEnt, 84) & 512)
		{
			return 4;
		}
		static s_iUserAmmo;
		static s_iBoxAmmo;
		if (0 < (s_iBoxAmmo = get_pdata_int(iEnt, 84, 4, 5)))
		{
			if (2 <= (s_iUserAmmo = get_pdata_int(iPlrId, 387, 5, 5)))
			{
				return 4;
			}
			new var2;
			if (s_iUserAmmo <= 0 && s_iBoxAmmo >= 2)
			{
				ham_give_item(iPlrId, "weapon_flashbang");
				ham_give_item(iPlrId, "weapon_flashbang");
				emit_sound(iPlrId, "", "items/gunpickup2.wav", 1065353216, 1061997773, "HamFilter", 100);
				emit_sound(iPlrId, "", "items/9mmclip1.wav", 1065353216, 1061997773, "HamFilter", 100);
				set_pev(iEnt, 70, 0);
				set_pev(iEnt, 73, 128);
				dllfunc(2, iEnt);
				return 4;
			}
			new var3;
			if (s_iUserAmmo == 1 && s_iBoxAmmo == 1)
			{
				ham_give_item(iPlrId, "weapon_flashbang");
				emit_sound(iPlrId, "", "items/9mmclip1.wav", 1065353216, 1061997773, "HamFilter", 100);
				set_pev(iEnt, 70, 0);
				set_pev(iEnt, 73, 128);
				dllfunc(2, iEnt);
				return 4;
			}
			new var4;
			if (s_iUserAmmo == 1 && s_iBoxAmmo >= 2)
			{
				set_pdata_int(iEnt, 84, s_iBoxAmmo + -1, 4, 5);
				ham_give_item(iPlrId, "weapon_flashbang");
				emit_sound(iPlrId, "", "items/9mmclip1.wav", 1065353216, 1061997773, "HamFilter", 100);
				return 4;
			}
			new var5;
			if (s_iUserAmmo <= 0 && ham_give_item(iPlrId, "weapon_flashbang") > 0)
			{
				emit_sound(iPlrId, "", "items/gunpickup2.wav", 1065353216, 1061997773, "HamFilter", 100);
				set_pev(iEnt, 70, 0);
				set_pev(iEnt, 73, 128);
				dllfunc(2, iEnt);
				return 4;
			}
			return 1;
		}
		static s_iTemp;
		s_iTemp = get_pdata_cbase(iEnt, 37, 4, 5);
		new var6;
		if (s_iTemp > 0 && pev_valid(s_iTemp))
		{
			if (get_pdata_int(s_iTemp, 43, 4, 5) == 29)
			{
				static s_iFwdMsg_AmmoPickup;
				s_iFwdMsg_AmmoPickup = register_message(g_iMsgId_AmmoPickup, "Message_AmmoPickup");
				new var7 = g_iBulletsDropped;
				g_iBulletsDropped[iPlrId][0] = 0;
				var7[0][var7] = 0;
				s_iTemp = 1;
				while (s_iTemp < 11)
				{
					if (0 < (s_iBoxAmmo = get_pdata_int(iEnt, s_iTemp + 73, 4, 5)))
					{
						if (g_iMaxAmmo[s_iTemp] <= (s_iUserAmmo = clamp(get_pdata_int(iPlrId, s_iTemp + 376, 5, 5), "HamFilter", g_iMaxAmmo[s_iTemp])))
						{
							new var8 = g_iBulletsDropped;
							var8[0][var8] = 1;
						}
						if (g_iMaxAmmo[s_iTemp] >= s_iBoxAmmo + s_iUserAmmo)
						{
							g_iBulletsDropped[iPlrId][s_iTemp] = s_iBoxAmmo;
							s_iUserAmmo = s_iBoxAmmo + s_iUserAmmo;
							set_pdata_int(iEnt, s_iTemp + 73, "HamFilter", 4, 5);
						}
						else
						{
							new var9 = g_iBulletsDropped;
							var9[0][var9] = 1;
							g_iBulletsDropped[iPlrId][s_iTemp] = g_iMaxAmmo[s_iTemp] - s_iUserAmmo;
							s_iUserAmmo = g_iMaxAmmo[s_iTemp];
							set_pdata_int(iEnt, s_iTemp + 73, s_iBoxAmmo - g_iBulletsDropped[iPlrId][s_iTemp], 4, 5);
						}
						new var10 = g_iBulletsDropped[iPlrId];
						var10[0] = g_iBulletsDropped[iPlrId][s_iTemp][var10[0]];
						fm_give_item(iPlrId, g_iAmmoEntityNames[s_iTemp]);
						set_pdata_int(iPlrId, s_iTemp + 376, s_iUserAmmo, 5, 5);
					}
					s_iTemp += 1;
				}
				unregister_message(g_iMsgId_AmmoPickup, s_iFwdMsg_AmmoPickup);
				if (g_iBulletsDropped[iPlrId][0])
				{
					emit_sound(iPlrId, "", "items/9mmclip2.wav", 1065353216, 1061997773, "HamFilter", 100);
				}
				new var11 = g_iBulletsDropped;
				if (!var11[0][var11])
				{
					set_pev(iEnt, 70, 0);
					set_pev(iEnt, 73, 128);
					dllfunc(2, iEnt);
				}
				return 4;
			}
		}
	}
	return 1;
}

force_weapon_drop(iPlrId, iArmedGrenade, iWeaponType)
{
	if (g_bChangingMap)
	{
		return 0;
	}
	g_bInAutoDrop = 1;
	static Float:s_fAngle[3];
	static s_iUserWeapons;
	s_iUserWeapons = pev(iPlrId, 79);
	pev(iPlrId, 126, s_fAngle);
	g_fPlayerAngle[iPlrId] = s_fAngle[1];
	new var1;
	if (iArmedGrenade != 4 && get_pdata_int(iPlrId, 388, 5, 5) > 0)
	{
		engclient_cmd(iPlrId, "drop", "weapon_hegrenade", 10772);
	}
	new var2;
	if (iArmedGrenade == 25)
	{
		var2 = 1;
	}
	else
	{
		var2 = 0;
	}
	if (0 < (g_iBulletsDropped[iPlrId][11] = clamp(get_pdata_int(iPlrId, 387, 5, 5), "HamFilter", 2) - var2))
	{
		engclient_cmd(iPlrId, "drop", "weapon_flashbang", 10772);
		if (iArmedGrenade == 25)
		{
			set_pdata_int(iPlrId, 387, 1, 5, 5);
			iArmedGrenade = ham_give_item(iPlrId, "weapon_flashbang");
			set_pdata_int(iPlrId, 387, 1, 5, 5);
			new var3;
			if (iArmedGrenade > 0 && pev_valid(iArmedGrenade))
			{
				set_pdata_cbase(iPlrId, 373, iArmedGrenade, 5, 5);
				set_pdata_float(iArmedGrenade, 30, 1065353216, "", 5);
				set_pdata_float(iArmedGrenade, 48, -1165815185, 4, 5);
			}
			iArmedGrenade = 0;
		}
	}
	new var4;
	if (iArmedGrenade != 9 && get_pdata_int(iPlrId, 389, 5, 5) > 0)
	{
		engclient_cmd(iPlrId, "drop", "weapon_smokegrenade", 10772);
	}
	static s_iLoop;
	g_iBulletsDropped[iPlrId][0] = 0;
	s_iLoop = 1;
	while (s_iLoop < 11)
	{
		g_iBulletsDropped[iPlrId][s_iLoop] = clamp(get_pdata_int(iPlrId, s_iLoop + 376, 5, 5), "HamFilter", g_iMaxAmmo[s_iLoop]);
		set_pdata_int(iPlrId, s_iLoop + 376, "HamFilter", 5, 5);
		new var30 = g_iBulletsDropped[iPlrId];
		var30[0] = g_iBulletsDropped[iPlrId][s_iLoop][var30[0]];
		s_iLoop += 1;
	}
	if (g_iBulletsDropped[iPlrId][0])
	{
		if (~s_iUserWeapons & 536870912)
		{
			ham_give_item(iPlrId, "weapon_knife");
		}
		engclient_cmd(iPlrId, "drop", "weapon_knife", 10772);
		ham_give_item(iPlrId, "weapon_knife");
	}
	g_bInAutoDrop = 0;
	new var5;
	if (s_iUserWeapons & 2 && iWeaponType != 1)
	{
		engclient_cmd(iPlrId, "drop", "weapon_p228", 10772);
	}
	new var6;
	if (s_iUserWeapons & 8 && iWeaponType != 3)
	{
		engclient_cmd(iPlrId, "drop", "weapon_scout", 10772);
	}
	new var7;
	if (s_iUserWeapons & 32 && iWeaponType != 5)
	{
		engclient_cmd(iPlrId, "drop", "weapon_xm1014", 10772);
	}
	new var8;
	if (s_iUserWeapons & 128 && iWeaponType != 7)
	{
		engclient_cmd(iPlrId, "drop", "weapon_mac10", 10772);
	}
	new var9;
	if (s_iUserWeapons & 256 && iWeaponType != 8)
	{
		engclient_cmd(iPlrId, "drop", "weapon_aug", 10772);
	}
	new var10;
	if (s_iUserWeapons & 1024 && iWeaponType != 10)
	{
		engclient_cmd(iPlrId, "drop", "weapon_elite", 10772);
	}
	new var11;
	if (s_iUserWeapons & 2048 && iWeaponType != 11)
	{
		engclient_cmd(iPlrId, "drop", "weapon_fiveseven", 10772);
	}
	new var12;
	if (s_iUserWeapons & 4096 && iWeaponType != 12)
	{
		engclient_cmd(iPlrId, "drop", "weapon_ump45", 10772);
	}
	new var13;
	if (s_iUserWeapons & 8192 && iWeaponType != 13)
	{
		engclient_cmd(iPlrId, "drop", "weapon_sg550", 10772);
	}
	new var14;
	if (s_iUserWeapons & 16384 && iWeaponType != 14)
	{
		engclient_cmd(iPlrId, "drop", "weapon_galil", 10772);
	}
	new var15;
	if (s_iUserWeapons & 32768 && iWeaponType != 15)
	{
		engclient_cmd(iPlrId, "drop", "weapon_famas", 10772);
	}
	new var16;
	if (s_iUserWeapons & 65536 && iWeaponType != 16)
	{
		engclient_cmd(iPlrId, "drop", "weapon_usp", 10772);
	}
	new var17;
	if (s_iUserWeapons & 131072 && iWeaponType != 17)
	{
		engclient_cmd(iPlrId, "drop", "weapon_glock18", 10772);
	}
	new var18;
	if (s_iUserWeapons & 262144 && iWeaponType != 18)
	{
		engclient_cmd(iPlrId, "drop", "weapon_awp", 10772);
	}
	new var19;
	if (s_iUserWeapons & 524288 && iWeaponType != 19)
	{
		engclient_cmd(iPlrId, "drop", "weapon_mp5navy", 10772);
	}
	new var20;
	if (s_iUserWeapons & 1048576 && iWeaponType != 20)
	{
		engclient_cmd(iPlrId, "drop", "weapon_m249", 10772);
	}
	new var21;
	if (s_iUserWeapons & 2097152 && iWeaponType != 21)
	{
		engclient_cmd(iPlrId, "drop", "weapon_m3", 10772);
	}
	new var22;
	if (s_iUserWeapons & 4194304 && iWeaponType != 22)
	{
		engclient_cmd(iPlrId, "drop", "weapon_m4a1", 10772);
	}
	new var23;
	if (s_iUserWeapons & 8388608 && iWeaponType != 23)
	{
		engclient_cmd(iPlrId, "drop", "weapon_tmp", 10772);
	}
	new var24;
	if (s_iUserWeapons & 16777216 && iWeaponType != 24)
	{
		engclient_cmd(iPlrId, "drop", "weapon_g3sg1", 10772);
	}
	new var25;
	if (s_iUserWeapons & 67108864 && iWeaponType != 26)
	{
		engclient_cmd(iPlrId, "drop", "weapon_deagle", 10772);
	}
	new var26;
	if (s_iUserWeapons & 134217728 && iWeaponType != 27)
	{
		engclient_cmd(iPlrId, "drop", "weapon_sg552", 10772);
	}
	new var27;
	if (s_iUserWeapons & 268435456 && iWeaponType != 28)
	{
		engclient_cmd(iPlrId, "drop", "weapon_ak47", 10772);
	}
	new var28;
	if (s_iUserWeapons & 1073741824 && iWeaponType != 30)
	{
		engclient_cmd(iPlrId, "drop", "weapon_p90", 10772);
	}
	new var29;
	if (s_iUserWeapons & 64 && iWeaponType != 6)
	{
		engclient_cmd(iPlrId, "drop", "weapon_c4", 10772);
	}
	return 0;
}

ham_give_item(iPlrId, iClassName[])
{
	new iEnt = engfunc(21, engfunc(43, iClassName));
	new var1;
	if (iEnt <= 0 || !pev_valid(iEnt))
	{
		return 0;
	}
	set_pev(iEnt, 83, 1073741824);
	dllfunc(1, iEnt);
	if (ExecuteHamB(20, iPlrId, iEnt))
	{
		ExecuteHamB(74, iEnt, iPlrId);
		return iEnt;
	}
	if (pev_valid(iEnt))
	{
		set_pev(iEnt, 84, pev(iEnt, 84) | 1073741824);
	}
	return -1;
}

fm_give_item(iPlrId, iClassName[])
{
	new iEnt = engfunc(21, engfunc(43, iClassName));
	if (!pev_valid(iEnt))
	{
		return 0;
	}
	set_pev(iEnt, 83, pev(iEnt, 83) | 1073741824);
	dllfunc(1, iEnt);
	new iSolidType = pev(iEnt, 70);
	dllfunc(4, iEnt, iPlrId);
	if (iSolidType != pev(iEnt, 70))
	{
		return iEnt;
	}
	set_pev(iEnt, 84, pev(iEnt, 84) | 1073741824);
	return -1;
}

bool:is_player_connected(iPlrId)
{
	if (0 < iPlrId <= g_iMaxPlayers)
	{
		if (1 << iPlrId & 31 & g_iConnected)
		{
			return true;
		}
	}
	return false;
}

bool:SphereToCartesian(Float:fDest[3], Float:fOrigin[3], Float:fView[3], Float:fAngle[3])
{
	new var1 = fView[1];
	var1 = floatmul(var1, floatdiv(1078530011, 1127481344));
	new var2 = fView;
	var2[0] = floatmul(var2[0], floatdiv(1078530011, 1127481344));
	new var3 = fAngle;
	var3[0] = floatmul(var3[0], floatdiv(1078530011, -1020002304));
	new var4 = fAngle[1];
	var4 = floatmul(var4, floatdiv(1078530011, 1127481344));
	static Float:s_fCos1;
	static Float:s_fSin1;
	static Float:s_fCos0;
	static Float:s_fSin0;
	s_fSin0 = floatsin(floatadd(fAngle[0], floatmul(1078530011, 1056964608)), "HamFilter");
	fDest[0] = floatmul(floatmul(fAngle[2], s_fSin0), floatcos(fAngle[1], "HamFilter"));
	fDest[1] = floatmul(floatmul(fAngle[2], s_fSin0), floatsin(fAngle[1], "HamFilter"));
	fDest[2] = floatmul(fAngle[2], floatcos(floatadd(fAngle[0], floatmul(1078530011, 1056964608)), "HamFilter"));
	s_fSin0 = floatsin(fView[0], "HamFilter");
	s_fCos0 = floatcos(fView[0], "HamFilter");
	s_fSin1 = floatsin(fView[1], "HamFilter");
	s_fCos1 = floatcos(fView[1], "HamFilter");
	static Float:s_fTemp[3];
	s_fTemp[0] = floatadd(floatsub(floatmul(floatmul(fDest[0], s_fCos0), s_fCos1), floatmul(fDest[1], s_fSin1)), floatmul(floatmul(fDest[2], s_fSin0), s_fCos1));
	s_fTemp[1] = floatadd(floatadd(floatmul(floatmul(fDest[0], s_fCos0), s_fSin1), floatmul(fDest[1], s_fCos1)), floatmul(floatmul(fDest[2], s_fSin1), s_fSin0));
	s_fTemp[2] = floatsub(floatmul(fDest[2], s_fCos0), floatmul(fDest[0], s_fSin0));
	fDest[0] = floatadd(fOrigin[0], s_fTemp[0]);
	fDest[1] = floatadd(fOrigin[1], s_fTemp[1]);
	fDest[2] = floatsub(fOrigin[2], s_fTemp[2]);
	return true;
}

